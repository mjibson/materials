.all(@primary; @secondary; @secondary-scheme) {
	.root(@primary);
	@media (prefers-color-scheme: @secondary-scheme) {
		.root(@secondary);
	}
}

.root(@colors) {
	:root {
		.colors(@colors);
	}
}

.colors(@colors) {
	--primary: @colors[primary];
	--variant: @colors[variant];
	--secondary: @colors[secondary];
	--secondary-variant: @colors[secondary-variant];
	--background: @colors[background];
	--surface: @colors[surface];
	--error: @colors[error];
	--on-primary: @colors[on-primary];
	--on-secondary: @colors[on-secondary];
	--on-background: @colors[on-background];
	--on-surface: @colors[on-surface];
	--on-error: @colors[on-error];

	.dp(@colors[surface]; @colors[on-surface]);
	.emph(@colors[surface]; @colors[on-surface]);
}

.dp(@color; @background) {
	--dp00: mix(@background, @color, 0);
	--dp01: mix(@background, @color, 5);
	--dp02: mix(@background, @color, 7);
	--dp03: mix(@background, @color, 8);
	--dp04: mix(@background, @color, 9);
	--dp06: mix(@background, @color, 11);
	--dp08: mix(@background, @color, 12);
	--dp12: mix(@background, @color, 14);
	--dp16: mix(@background, @color, 15);
	--dp24: mix(@background, @color, 16);
}

.emph(@color; @background) {
	--emph-high: mix(@background, @color, 87);
	--emph-medium: mix(@background, @color, 60);
	--disabled: mix(@background, @color, 38);
}

body {
	color: var(--emph-high);
	background-color: var(--background);
}
